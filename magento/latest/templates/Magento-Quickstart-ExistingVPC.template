{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(0013) Deploy Magento on AWS (Existing VPC)",
    "Parameters": {
        "MagentoReleaseMedia": {
            "Description": "Amazon S3 path to download magento .tar.gz file (s3://mybucket/magento-1.9.2.1.tar-2015-08-03-06-35-45.gz)",
            "Default": "",
            "Type": "String"
        },
        "MagentoSampleData": {
            "Description": "[ optional ] Amazon S3 path to download magento sample data file ((s3://mybucket/magento-sample-data-1.9.1.0.tar-2015-02-11-08-18-26.gz)",
            "Default": "",
            "Type": "String"
        },
        "WebServerInstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "i2.8xlarge",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "NotificationEmail": {
            "Description": "Email address to notify if there are any scaling operations [ optional]",
            "Default": "",
            "Type": "String"
        },
        "WebServerMinSize": {
            "Description": "The minimum number of EC2 instances in the Auto Scaling group of WebServers.",
            "Default": "1",
            "Type": "String",
            "AllowedValues": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10"
            ]
        },
        "WebServerMaxSize": {
            "Description": "The maximum number of EC2 instances in the Auto Scaling group of WebServers.",
            "Type": "String",
            "Default": "1",
            "AllowedValues": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10"
            ]
        },
        "WebServerDesiredCapacity": {
            "Description": "The desired number of EC2 instances in the Auto Scaling group of WebServers before indicating CREATE_SUCCESS.",
            "Type": "String",
            "Default": "1",
            "AllowedValues": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10"
            ]
        },
        "KeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "home",
            "Description": "Name of an EC2 KeyPair. Your instances will launch with this KeyPair."
        },
        "BucketNamePrefix": {
            "Description": "Name of bucket to hold magento media assets",
            "Default": "magentomedia",
            "Type": "String"
        },
        "ExistingIamInstanceProfile": {
            "Type": "String",
            "Default": "",
            "Description": "Name or ARN of the instance profile associated with the IAM role for the WebServer instances. If empty, instances will be launched with default IAM role."
        },
        "DBAllocatedStorage": {
            "Default": "16",
            "Description": "The size of the database in gigabytes (GB)",
            "Type": "Number",
            "MinValue": "5",
            "MaxValue": "4096",
            "ConstraintDescription": "must be between 5 and 4096 GB. If Iops specified, AllocatedStorage must be at least 100 GB and with minimum Iops value of 1000"
        },
        "DBAutoMinorVersionUpgrade": {
            "Default": "true",
            "Description": "Select true/false to setup Auto Minor Version upgrade",
            "Type": "String",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "DBBackupRetentionPeriod": {
            "Type": "String",
            "Default": "7",
            "Description": "The number of days for which automatic DB snapshots are retained."
        },
        "DBInstanceClass": {
            "Default": "db.m3.2xlarge",
            "Description": "The name of the compute and memory capacity class of the DB instance.",
            "Type": "String",
            "AllowedValues": [
                "db.t1.micro",
                "db.m1.small",
                "db.m3.medium",
                "db.m3.large",
                "db.m3.xlarge",
                "db.m3.2xlarge",
                "db.r3.large",
                "db.r3.xlarge",
                "db.r3.2xlarge",
                "db.r3.4xlarge",
                "db.r3.8xlarge",
                "db.t2.micro",
                "db.t2.small",
                "db.t2.medium",
                "db.m2.xlarge",
                "db.m2.2xlarge",
                "db.m2.4xlarge",
                "db.cr1.8xlarge",
                "db.m1.medium",
                "db.m1.large",
                "db.m1.xlarge"
            ],
            "ConstraintDescription": "Must select a valid database instance type."
        },
        "DBName": {
            "Default": "QuickstartMySQLDB",
            "Description": "Name of the initial database for the MySQL RDS Instance.",
            "Type": "String",
            "MinLength": "5",
            "MaxLength": "64",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*"
        },
        "DBIops": {
            "Default": "10000",
            "Description": "DB Iops. Used only when io1 specified for the StorageType property",
            "Type": "Number",
            "AllowedValues": [
                "1000",
                "2000",
                "3000",
                "4000",
                "5000",
                "6000",
                "7000",
                "8000",
                "9000",
                "10000"
            ],
            "ConstraintDescription": "1000 Iops min and increased in 1K increments. "
        },
        "DBMasterUsername": {
            "Default": "admin",
            "NoEcho": "true",
            "Description": "The database admin account username",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },
        "DBMasterUserPassword": {
            "Description": "The database admin account password",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "64",
            "NoEcho": "true",
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "ConstraintDescription": "Min 8 chars."
        },
        "DBMultiAZ": {
            "Default": "false",
            "Description": "Specifies if the database instance is a multiple Availability Zone deployment.",
            "Type": "String",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "DBPubliclyAccessible": {
            "Default": "false",
            "Description": "Indicates whether the database instance is an Internet-facing instance.",
            "Type": "String",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "DBStorageType": {
            "Default": "io1",
            "Description": "The storage type associated with this database instance",
            "Type": "String",
            "AllowedValues": [
                "standard",
                "gp2",
                "io1"
            ]
        },
        "PublicSubnet0": {
            "Type": "AWS::EC2::Subnet::Id",
            "Default": "subnet-91b40ac8"
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet::Id",
            "Default": "subnet-63127714"
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet::Id",
            "Default": "subnet-d82166bd"
        },
        "PrivateSubnet0": {
            "Type": "AWS::EC2::Subnet::Id",
            "Default": "subnet-9eb40ac7"
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet::Id",
            "Default": "subnet-62127715"
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet::Id",
            "Default": "subnet-db2166be"
        },
        "VPC": {
            "Type": "AWS::EC2::VPC::Id",
            "Default": "vpc-8e493deb"
        },
        "RemoteAccessCIDR": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    "Outputs": {
        "VPC": {
            "Description": "VPC-ID of the newly created VPC",
            "Value": {
                "Ref": "VPC"
            }
        },
        "PublicSubnet0": {
            "Description": "Subnet-ID of the Public Subnet",
            "Value": {
                "Ref": "PublicSubnet0"
            }
        },
        "PrivateSubnet2": {
            "Value": {
                "Ref": "PrivateSubnet2"
            },
            "Description": "Subnet-ID of the PrivateSubnet2"
        },
        "PrivateSubnet1": {
            "Value": {
                "Ref": "PrivateSubnet1"
            },
            "Description": "Subnet-ID of the PrivateSubnet1"
        },
        "PrivateSubnet0": {
            "Value": {
                "Ref": "PrivateSubnet0"
            },
            "Description": "Subnet-ID of the PrivateSubnet0"
        },
        "PublicSubnet2": {
            "Description": "Subnet-ID of the Public Subnet",
            "Value": {
                "Ref": "PublicSubnet2"
            }
        },
        "PublicSubnet1": {
            "Description": "Subnet-ID of the Public Subnet",
            "Value": {
                "Ref": "PublicSubnet1"
            }
        }
    },
    "Resources": {
        "AutoScaledInstanceSecurityGroup0": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH access and HTTP from the load balancer only",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupId": {
                            "Ref": "ElasticLoadBalancerSecurityGroup0"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupId": {
                            "Ref": "ElasticLoadBalancerSecurityGroup0"
                        }
                    }
                ],
                "SecurityGroupEgress": {
                    "IpProtocol": "-1",
                    "FromPort": "1",
                    "ToPort": "65535",
                    "CidrIp": "0.0.0.0/0"
                }
            }
        },
        "AutoScaledInstanceLoopSecurityGroup0": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable all communications within Auto Scaled instances",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "SourceSecurityGroupId": {
                            "Ref": "AutoScaledInstanceSecurityGroup0"
                        }
                    }
                ]
            }
        },
        "ElasticLoadBalancerSecurityGroup0": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP/HTTPS access on port 80 and 443",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "RDSMySQL": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3.amazonaws.com/quickstart-reference/magento/latest/templates/BaseRDSMySQLInstance.template",
                "Parameters": {
                    "VPC": {
                        "Ref": "VPC"
                    },
                    "AutoScaledInstanceSecurityGroup": {
                        "Ref": "AutoScaledInstanceSecurityGroup0"
                    },
                    "Subnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet0"
                                },
                                {
                                    "Ref": "PrivateSubnet1"
                                }
                            ]
                        ]
                    },
                    "DBAllocatedStorage": {
                        "Ref": "DBAllocatedStorage"
                    },
                    "DBAutoMinorVersionUpgrade": {
                        "Ref": "DBAutoMinorVersionUpgrade"
                    },
                    "DBBackupRetentionPeriod": {
                        "Ref": "DBBackupRetentionPeriod"
                    },
                    "DBInstanceClass": {
                        "Ref": "DBInstanceClass"
                    },
                    "DBName": {
                        "Ref": "DBName"
                    },
                    "DBIops": {
                        "Ref": "DBIops"
                    },
                    "DBMasterUsername": {
                        "Ref": "DBMasterUsername"
                    },
                    "DBMasterUserPassword": {
                        "Ref": "DBMasterUserPassword"
                    },
                    "DBMultiAZ": {
                        "Ref": "DBMultiAZ"
                    },
                    "DBPubliclyAccessible": {
                        "Ref": "DBPubliclyAccessible"
                    },
                    "DBStorageType": {
                        "Ref": "DBStorageType"
                    }
                }
            }
        },
        "WebServer": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3.amazonaws.com/quickstart-reference/magento/latest/templates/BaseWebServerAutoScaler.template",
                "Parameters": {
                    "VPC": {
                        "Ref": "VPC"
                    },
                    "WebServerInstanceType": {
                        "Ref": "WebServerInstanceType"
                    },
                    "BucketNamePrefix": {
                        "Ref": "BucketNamePrefix"
                    },
                    "NotificationEmail": {
                        "Ref": "NotificationEmail"
                    },
                    "ElasticLoadBalancerSecurityGroup": {
                        "Ref": "ElasticLoadBalancerSecurityGroup0"
                    },
                    "AutoScaledInstanceSecurityGroup": {
                        "Ref": "AutoScaledInstanceSecurityGroup0"
                    },
                    "MagentoReleaseMedia": {
                        "Ref": "MagentoReleaseMedia"
                    },
                    "MagentoSampleData": {
                        "Ref": "MagentoSampleData"
                    },
                    "WebServerMinSize": {
                        "Ref": "WebServerMinSize"
                    },
                    "DBMasterUsername": {
                        "Ref": "DBMasterUsername"
                    },
                    "DBMasterUserPassword": {
                        "Ref": "DBMasterUserPassword"
                    },
                    "RDSMySQLStack": {
                        "Ref": "RDSMySQL"
                    },
                    "WebServerSubnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet0"
                                },
                                {
                                    "Ref": "PrivateSubnet1"
                                }
                            ]
                        ]
                    },
                    "ElasticLoadBalancerSubnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PublicSubnet0"
                                },
                                {
                                    "Ref": "PublicSubnet1"
                                }
                            ]
                        ]
                    },
                    "WebServerMaxSize": {
                        "Ref": "WebServerMaxSize"
                    },
                    "WebServerDesiredCapacity": {
                        "Ref": "WebServerDesiredCapacity"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "ExistingIamInstanceProfile": {
                        "Ref": "ExistingIamInstanceProfile"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    }
                }
            }
        },
        "InboundEphemeralPrivateNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "RuleNumber": "140",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                }
            }
        },
        "OutboundHTTPPrivateNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "80",
                    "To": "80"
                }
            }
        },
        "OutboundHTTPSPrivateNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "RuleNumber": "110",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "443",
                    "To": "443"
                }
            }
        },
        "OutboundEphemeralPrivateNetworkAclEntry2": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                },
                "RuleNumber": "1202"
            }
        },
        "OutboundEphemeralPrivateNetworkAclEntry1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                },
                "RuleNumber": "1201"
            }
        },
        "OutboundEphemeralPrivateNetworkAclEntry0": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                },
                "RuleNumber": "1200"
            }
        },
        "InboundHTTPPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "80",
                    "To": "80"
                }
            }
        },
        "InboundHTTPSPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "110",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "443",
                    "To": "443"
                }
            }
        },
        "InboundEmphemeralPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "140",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                }
            }
        },
        "OutboundHTTPPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "80",
                    "To": "80"
                }
            }
        },
        "OutboundHTTPSPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "110",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "443",
                    "To": "443"
                }
            }
        },
        "OutboundEphemeralPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "140",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                }
            }
        },
        "MyDHCP": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
                "DomainName": {
                    "Fn::FindInMap": [
                        "DomainNameMapping",
                        {
                            "Ref": "AWS::Region"
                        },
                        "NAME"
                    ]
                },
                "DomainNameServers": [
                    "AmazonProvidedDNS"
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "MyDHCP (QuickStart) "
                    }
                ]
            }
        },
        "MyVPCDHCPOptionsAssociation": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "DhcpOptionsId": {
                    "Ref": "MyDHCP"
                }
            }
        },
        "PublicNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PublicNetworkAcl (QuickStart) "
                    },
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "PrivateNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PrivateNetworkAcl (QuickStart) "
                    },
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        }
    },
    "Mappings": {
        "DomainNameMapping": {
            "eu-central-1": {
                "NAME": "eu-central-1.compute.internal"
            },
            "sa-east-1": {
                "NAME": "sa-east-1.compute.internal"
            },
            "ap-northeast-1": {
                "NAME": "ap-northeast-1.compute.internal"
            },
            "eu-west-1": {
                "NAME": "eu-west-1.compute.internal"
            },
            "us-east-1": {
                "NAME": "ec2.internal"
            },
            "us-west-1": {
                "NAME": "us-west-1.compute.internal"
            },
            "us-west-2": {
                "NAME": "us-west-2.compute.internal"
            },
            "ap-southeast-2": {
                "NAME": "ap-southeast-2.compute.internal"
            },
            "ap-southeast-1": {
                "NAME": "ap-southeast-1.compute.internal"
            }
        },
        "AWSInstanceType2Arch": {
            "t2.micro": {
                "Arch": "HVM64"
            },
            "t2.small": {
                "Arch": "HVM64"
            },
            "t2.medium": {
                "Arch": "HVM64"
            },
            "m3.medium": {
                "Arch": "HVM64"
            },
            "m3.large": {
                "Arch": "HVM64"
            },
            "m3.xlarge": {
                "Arch": "HVM64"
            },
            "m3.2xlarge": {
                "Arch": "HVM64"
            },
            "c3.large": {
                "Arch": "HVM64"
            },
            "c3.xlarge": {
                "Arch": "HVM64"
            },
            "c3.2xlarge": {
                "Arch": "HVM64"
            },
            "c3.4xlarge": {
                "Arch": "HVM64"
            },
            "c3.8xlarge": {
                "Arch": "HVM64"
            },
            "c4.large": {
                "Arch": "HVM64"
            },
            "c4.xlarge": {
                "Arch": "HVM64"
            },
            "c4.2xlarge": {
                "Arch": "HVM64"
            },
            "c4.4xlarge": {
                "Arch": "HVM64"
            },
            "c4.8xlarge": {
                "Arch": "HVM64"
            },
            "g2.2xlarge": {
                "Arch": "HVMG2"
            },
            "r3.large": {
                "Arch": "HVM64"
            },
            "r3.xlarge": {
                "Arch": "HVM64"
            },
            "r3.2xlarge": {
                "Arch": "HVM64"
            },
            "r3.4xlarge": {
                "Arch": "HVM64"
            },
            "r3.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.xlarge": {
                "Arch": "HVM64"
            },
            "i2.2xlarge": {
                "Arch": "HVM64"
            },
            "i2.4xlarge": {
                "Arch": "HVM64"
            },
            "i2.8xlarge": {
                "Arch": "HVM64"
            },
            "d2.xlarge": {
                "Arch": "HVM64"
            },
            "d2.2xlarge": {
                "Arch": "HVM64"
            },
            "d2.4xlarge": {
                "Arch": "HVM64"
            },
            "d2.8xlarge": {
                "Arch": "HVM64"
            },
            "hi1.4xlarge": {
                "Arch": "HVM64"
            },
            "hs1.8xlarge": {
                "Arch": "HVM64"
            },
            "cr1.8xlarge": {
                "Arch": "HVM64"
            },
            "cc2.8xlarge": {
                "Arch": "HVM64"
            }
        },
        "AWSNATAMI": {
            "eu-central-1": {
                "AMI": "ami-46073a5b"
            },
            "sa-east-1": {
                "AMI": "ami-fbfa41e6"
            },
            "ap-northeast-1": {
                "AMI": "ami-03cf3903"
            },
            "eu-west-1": {
                "AMI": "ami-6975eb1e"
            },
            "us-east-1": {
                "AMI": "ami-303b1458"
            },
            "us-west-1": {
                "AMI": "ami-7da94839"
            },
            "us-west-2": {
                "AMI": "ami-69ae8259"
            },
            "ap-southeast-2": {
                "AMI": "ami-e7ee9edd"
            },
            "ap-southeast-1": {
                "AMI": "ami-b49dace6"
            }
        },
        "AMI": {
            "eu-central-1": {
                "64HVM": "ami-a8221fb5"
            },
            "sa-east-1": {
                "64HVM": "ami-b52890a8"
            },
            "ap-northeast-1": {
                "64HVM": "ami-cbf90ecb"
            },
            "eu-west-1": {
                "64HVM": "ami-a10897d6"
            },
            "us-east-1": {
                "64HVM": "ami-1ecae776"
            },
            "us-west-1": {
                "64HVM": "ami-d114f295"
            },
            "us-west-2": {
                "64HVM": "ami-e7527ed7"
            },
            "ap-southeast-2": {
                "64HVM": "ami-fd9cecc7"
            },
            "ap-southeast-1": {
                "64HVM": "ami-68d8e93a"
            }
        }
    }
}
